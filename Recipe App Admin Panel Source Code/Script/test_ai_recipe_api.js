const axios = require('axios');

// Base URL for the API
const baseURL = 'http://localhost:3000'; // Change this to your server URL

// Test data
const testData = {
    // You need to get a valid token from login first
    authToken: 'your_auth_token_here',
    sampleRecipe: {
        recipeName: 'AI Generated Pasta',
        recipeContent: 'Delicious pasta recipe generated by AI...',
        ingredients: ['pasta', 'tomato sauce', 'cheese', 'herbs'],
        cookingTime: 30,
        servingSize: 4,
        difficultyLevel: 'Easy',
        tags: ['italian', 'pasta', 'quick']
    }
};

// Helper function to make authenticated requests
async function makeRequest(endpoint, method = 'POST', data = {}) {
    try {
        const config = {
            method,
            url: `${baseURL}${endpoint}`,
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${testData.authToken}`
            },
            data
        };

        const response = await axios(config);
        console.log(`✅ ${method} ${endpoint}:`, response.data);
        return response.data;
    } catch (error) {
        console.error(`❌ ${method} ${endpoint}:`, error.response?.data || error.message);
        return null;
    }
}

// Test functions
async function testSaveAiRecipe() {
    console.log('\n🧪 Testing Save AI Recipe...');
    const result = await makeRequest('/saveAiRecipe', 'POST', testData.sampleRecipe);
    if (result && result.success) {
        testData.savedRecipeId = result.data._id;
        console.log('💾 Recipe saved with ID:', testData.savedRecipeId);
    }
    return result;
}

async function testGetUserAiRecipes() {
    console.log('\n🧪 Testing Get User AI Recipes...');
    const result = await makeRequest('/getUserAiRecipes', 'POST', {});
    if (result && result.success) {
        console.log('📄 Found', result.data.length, 'AI recipes');
    }
    return result;
}

async function testUpdateAiRecipe() {
    console.log('\n🧪 Testing Update AI Recipe...');
    if (!testData.savedRecipeId) {
        console.log('⚠️ No saved recipe ID found. Skipping update test.');
        return null;
    }

    const updateData = {
        recipeId: testData.savedRecipeId,
        recipeName: 'Updated AI Generated Pasta',
        cookingTime: 25,
        tags: ['italian', 'pasta', 'quick', 'updated']
    };

    const result = await makeRequest('/updateAiRecipe', 'POST', updateData);
    return result;
}

async function testDeleteAiRecipe() {
    console.log('\n🧪 Testing Delete AI Recipe...');
    if (!testData.savedRecipeId) {
        console.log('⚠️ No saved recipe ID found. Skipping delete test.');
        return null;
    }

    const result = await makeRequest('/deleteAiRecipe', 'POST', {
        recipeId: testData.savedRecipeId
    });
    return result;
}

// Test authentication endpoints (you need to run this first to get a token)
async function testLogin() {
    console.log('\n🧪 Testing Login (to get auth token)...');
    console.log('ℹ️ Please update the credentials below with valid user data:');
    
    const loginData = {
        email: 'test@example.com', // Update this
        password: 'password123'     // Update this
    };

    try {
        const response = await axios.post(`${baseURL}/SignIn`, loginData);
        if (response.data.success && response.data.token) {
            testData.authToken = response.data.token;
            console.log('✅ Login successful! Token saved.');
            return response.data;
        } else {
            console.log('❌ Login failed:', response.data.message);
        }
    } catch (error) {
        console.error('❌ Login error:', error.response?.data || error.message);
    }
    return null;
}

// Main test runner
async function runAllTests() {
    console.log('🚀 Starting AI Recipe API Tests...');
    console.log('📍 Base URL:', baseURL);
    
    // First, you need to login to get an auth token
    console.log('\n⚠️ IMPORTANT: Update the login credentials in testLogin() function');
    console.log('⚠️ Then uncomment the testLogin() call below and run this script');
    
    // Uncomment this line after updating login credentials:
    // await testLogin();
    
    if (!testData.authToken || testData.authToken === 'your_auth_token_here') {
        console.log('❌ No valid auth token. Please login first.');
        console.log('💡 Update testData.authToken with a valid token or use testLogin()');
        return;
    }

    // Run all tests
    await testSaveAiRecipe();
    await testGetUserAiRecipes();
    await testUpdateAiRecipe();
    await testDeleteAiRecipe();
    
    console.log('\n✅ All tests completed!');
}

// Helper function to test admin endpoints
async function testAdminEndpoints() {
    console.log('\n🧪 Testing Admin Endpoints (Browser-based)...');
    console.log('🌐 Visit these URLs in your browser after logging into admin panel:');
    console.log(`📊 AI Recipes List: ${baseURL}/ai-recipes`);
    console.log(`📈 AI Recipe Stats: ${baseURL}/ai-recipe-stats`);
    console.log(`🔍 AI Recipe Detail: ${baseURL}/ai-recipe-detail?id=RECIPE_ID_HERE`);
    console.log(`🗑️ Delete AI Recipe: ${baseURL}/delete-ai-recipe?id=RECIPE_ID_HERE`);
}

// Export for use in other files
module.exports = {
    runAllTests,
    testSaveAiRecipe,
    testGetUserAiRecipes,
    testUpdateAiRecipe,
    testDeleteAiRecipe,
    testLogin,
    testAdminEndpoints
};

// Run tests if this file is executed directly
if (require.main === module) {
    runAllTests();
    testAdminEndpoints();
}
